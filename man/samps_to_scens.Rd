% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/samps_to_scens.R
\name{samps_to_scens}
\alias{samps_to_scens}
\title{Generate multivariate forecasts}
\usage{
samps_to_scens(copulatype, no_samps, list_margins, list_sigma, list_mean,
  control, ...)
}
\arguments{
\item{copulatype}{Either "spatial" of "temporal", note that spatio-temporal can be generated via "temporal" setting}

\item{no_samps}{Number of scenarios required}

\item{list_margins}{a list of the margins of the copula - e.g. if class is MultiQR --> list(<<MultiQR object>>). Multiple margins are allowed. If parametric class supply a list of the distribution parameters}

\item{list_sigma}{list of the covariance matrices corresponding to each fold}

\item{list_mean}{list of the mean vectors corresponding to each fold}

\item{control}{a list of control parameters, should contain "kfold", "issue_ind", and "horiz_ind" which are the kfold, issue time, and time horizon vectors corresponding to the margins of the copula. If margins MultiQR class also pass "PIT_method" and "CDFtails", which are passed to the PIT function. If the margins are distribution parameter predictions then the user must define "q_fun", which transforms the columns of \code{list_margins} through the quantile function --- see example for more details.}

\item{...}{other parameters to be passed to mvtnorm::rmvnorm}
}
\value{
A list or data frame of multivariate scenario forecasts
}
\description{
This function produces a list of multivariate scenario forecasts in the marginal domain from the spatial/tempral/spatiotemporal covariance matrices and marginal distributions
}
\details{
Details go here...
}
\examples{
\dontrun{
temp <- samps_to_scens(copulatype = "temporal",no_samps = 100,list_margins = list(param_margins),list_sigma = b_cvm,list_mean = mean_vec,
                       control=list(kfold = ForecastData$kfold,issue_ind=ForecastData$issueTime,horiz_ind=ForecastData$Horizon,
                                    q_fun = function(p, mu = 0, sigma = 1, nu = 1, tau = 0.5, lower.tail = TRUE, log.p = FALSE){
                                    gamlss.dist::qGB2(p = p, mu = mu, sigma = sigma, nu = nu, tau = tau,  lower.tail = lower.tail,log.p = log.p)}))
}

\dontrun{
temp <- samps_to_scens(copulatype = "temporal",no_samps = 100,list_margins = list(mqr_gbm),list_sigma = par_cvm,list_mean = mean_vec,
                      control=list(kfold = ForecastData$kfold,issue_ind=ForecastData$issueTime,horiz_ind=ForecastData$Horizon,
                                   PIT_method="linear",CDFtails=list(method="interpolate",L=0,U=1)))
}
}
